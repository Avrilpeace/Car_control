ARM Linker, 5.03 [Build 24] [MDK-ARM Standard]

==============================================================================

Section Cross References

    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.data) for SystemCoreClock
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text) for NMI_Handler
    startup_stm32f10x_md.o(RESET) refers to usart1.o(.text) for DMA1_Channel5_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    stm32f10x_gpio.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f10x_rcc.o(.text) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_usart.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    usart1.o(.text) refers to stm32f10x_dma.o(.text) for DMA_GetITStatus
    usart1.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphClockCmd
    usart1.o(.text) refers to stm32f10x_gpio.o(.text) for GPIO_Init
    usart1.o(.text) refers to stm32f10x_usart.o(.text) for USART_DeInit
    usart1.o(.text) refers to misc.o(.text) for NVIC_Init
    usart1.o(.text) refers to delay.o(.text) for delay_ms
    usart1.o(.text) refers to usart1.o(.bss) for sbus_rx_buffer
    stm32f10x_it.o(.text) refers to stm32f10x_usart.o(.text) for USART_GetITStatus
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000025) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing core_cm3.o(.emb_text), (32 bytes).
    Removing stm32f10x_exti.o(.text), (284 bytes).

2 unused section(s) (total 316 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000014ec, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x000014c4, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000ec   Data   RO           80    RESET               startup_stm32f10x_md.o
    0x080000ec   0x00000008   Code   RO          237  * !!!main             c_w.l(__main.o)
    0x080000f4   0x00000002   Code   RO          264    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080000f6   0x00000000   Code   RO          271    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          274    .ARM.Collect$$libinit$$00000008  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          276    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          278    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          281    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          283    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          285    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          287    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          289    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          291    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          293    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          295    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          297    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          299    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          301    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          305    .ARM.Collect$$libinit$$0000002A  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          307    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          309    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          311    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080000f6   0x00000002   Code   RO          312    .ARM.Collect$$libinit$$00000031  c_w.l(libinit2.o)
    0x080000f8   0x00000002   Code   RO          332    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080000fa   0x00000000   Code   RO          346    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          349    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          352    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          354    .ARM.Collect$$libshutdown$$0000000B  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          357    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)
    0x080000fa   0x00000002   Code   RO          358    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080000fc   0x00000000   Code   RO          239    .ARM.Collect$$rtentry$$00000000  c_w.l(rtentry.o)
    0x080000fc   0x00000000   Code   RO          241    .ARM.Collect$$rtentry$$00000002  c_w.l(rtentry2.o)
    0x080000fc   0x00000006   Code   RO          253    .ARM.Collect$$rtentry$$00000004  c_w.l(rtentry4.o)
    0x08000102   0x00000000   Code   RO          243    .ARM.Collect$$rtentry$$00000009  c_w.l(rtentry2.o)
    0x08000102   0x00000004   Code   RO          244    .ARM.Collect$$rtentry$$0000000A  c_w.l(rtentry2.o)
    0x08000106   0x00000000   Code   RO          246    .ARM.Collect$$rtentry$$0000000C  c_w.l(rtentry2.o)
    0x08000106   0x00000008   Code   RO          247    .ARM.Collect$$rtentry$$0000000D  c_w.l(rtentry2.o)
    0x0800010e   0x00000002   Code   RO          268    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000110   0x00000000   Code   RO          314    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000110   0x00000004   Code   RO          315    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000114   0x00000006   Code   RO          316    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800011a   0x00000002   PAD
    0x0800011c   0x000001dc   Code   RO           17    .text               system_stm32f10x.o
    0x080002f8   0x00000040   Code   RO           81    .text               startup_stm32f10x_md.o
    0x08000338   0x000000dc   Code   RO           85    .text               misc.o
    0x08000414   0x00000250   Code   RO          101    .text               stm32f10x_dma.o
    0x08000664   0x00000358   Code   RO          125    .text               stm32f10x_gpio.o
    0x080009bc   0x000003a4   Code   RO          137    .text               stm32f10x_rcc.o
    0x08000d60   0x00000408   Code   RO          151    .text               stm32f10x_usart.o
    0x08001168   0x00000270   Code   RO          163    .text               usart1.o
    0x080013d8   0x00000036   Code   RO          194    .text               delay.o
    0x0800140e   0x00000002   PAD
    0x08001410   0x0000003c   Code   RO          206    .text               stm32f10x_it.o
    0x0800144c   0x00000004   Code   RO          221    .text               main.o
    0x08001450   0x00000006   Code   RO          235    .text               c_w.l(heapauxi.o)
    0x08001456   0x0000004a   Code   RO          255    .text               c_w.l(sys_stackheap_outer.o)
    0x080014a0   0x0000000c   Code   RO          257    .text               c_w.l(exit.o)
    0x080014ac   0x00000008   Code   RO          265    .text               c_w.l(libspace.o)
    0x080014b4   0x0000000c   Code   RO          324    .text               c_w.l(sys_exit.o)
    0x080014c0   0x00000002   Code   RO          335    .text               c_w.l(use_no_semi.o)
    0x080014c2   0x00000000   Code   RO          337    .text               c_w.l(indicate_semi.o)
    0x080014c2   0x00000002   PAD
    0x080014c4   0x00000000   Data   RO          389    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x000006b8, Max: 0x00010000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000014   Data   RW           18    .data               system_stm32f10x.o
    0x20000014   0x00000014   Data   RW          138    .data               stm32f10x_rcc.o
    0x20000028   0x0000002e   Zero   RW          164    .bss                usart1.o
    0x20000056   0x00000002   PAD
    0x20000058   0x00000060   Zero   RW          266    .bss                c_w.l(libspace.o)
    0x200000b8   0x00000200   Zero   RW           79    HEAP                startup_stm32f10x_md.o
    0x200002b8   0x00000400   Zero   RW           78    STACK               startup_stm32f10x_md.o

